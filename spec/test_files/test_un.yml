# encoding: utf-8
general_options:
  data_classification: unstructured
structured:
  # options for dissecting incoming structured data
  options:
    # more than one rows?
    multiple?: false
    # name for the multiple rows content (eg: {#{name} => [{"a"=>1, "b"=>2}]} )
    name: ordelines
    # row wraps?
    multiline?: false
    # strucrure of fixed width table - number of captured groups = number of fields
    structure: {}
    # orderline data start - end (will not be included)
    parsing_start: ""
    parsing_end: ""
    # max length of order line in bytes
    max_line: 80
    # if the multiline orderline seperates with something else than whitespace charachters
    nextmatch_seperator: /\A\s*\z/
    # need to parse and some unstructure data with regexes?
    has_also_unstructured_data?: true
  # the rest of desired captured groups if the incoming data has_also_unstructured_data
  regexes:
    named_cg: /\(?(?<first_digits>[0-9]{3})\)?[-. ]?(?<second_digits>[0-9]{3})[-. ]?(?<third_digits>[0-9]{4})$/
    non_named_cg: /\(?(?:[0-9]{3})\)?[-. ]?(?:[0-9]{3})[-. ]?([0-9]{4})$/
    one_named_cg: /\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?(?<last_digits>[0-9]{4})$/
    none_named_cg: /\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/
    no_cg:  /\W/
unstructured:
  regexes:
    named_cg: /\(?(?<first_digits>[0-9]{3})\)?[-. ]?(?<second_digits>[0-9]{3})[-. ]?(?<third_digits>[0-9]{4})$/
    non_named_cg: /\(?(?:[0-9]{3})\)?[-. ]?(?:[0-9]{3})[-. ]?([0-9]{4})$/
    one_named_cg: /\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?(?<last_digits>[0-9]{4})$/
    none_named_cg: /\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/
    no_cg:  /\W/
